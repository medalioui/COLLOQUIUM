{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Downloads/xtreme-react-lite-master/src/views/auth/auth.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport '../auth/auth.css';\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch('/login.php', requestOptions).then(handleResponse).then(user => {\n    // login successful if there's a user in the response\n    if (user) {\n      // store user details and basic auth credentials in local storage \n      // to keep user logged in between page refreshes\n      user.authdata = window.btoa(username + ':' + password);\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout(); //  location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nvar doPost = function () {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: 'React Hooks POST Request Example'\n    })\n  };\n  fetch('/post.php').then(response => response.json()).then(data => alert(data.action));\n};\n\nfunction preventSubmit(evt) {\n  evt.preventDefault();\n}\n\n;\n\nconst Meeting = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, \"Connexion\")), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }\n  }, \"Veuillez entrer vos indentifiants pour acceder au platforme\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: preventSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    className: \"col-4 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"password\",\n    className: \"col-4 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, \"Mot de passe\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"offset-4 col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: doPost,\n    name: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Connexion\")))))));\n};\n\nexport default Meeting;","map":{"version":3,"sources":["/Users/mohamed/Downloads/xtreme-react-lite-master/src/views/auth/auth.jsx"],"names":["React","Row","Col","login","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","authdata","window","btoa","localStorage","setItem","logout","removeItem","response","text","data","parse","ok","status","error","message","statusText","Promise","reject","doPost","title","json","alert","action","preventSubmit","evt","preventDefault","Meeting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Row,\n    Col\n} from 'reactstrap';\nimport '../auth/auth.css';\n\nfunction login(username, password) {\n  const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password })\n  };\n\n  return fetch('/login.php', requestOptions)\n      .then(handleResponse)\n      .then(user => {\n          // login successful if there's a user in the response\n          if (user) {\n              // store user details and basic auth credentials in local storage \n              // to keep user logged in between page refreshes\n              user.authdata = window.btoa(username + ':' + password);\n              localStorage.setItem('user', JSON.stringify(user));\n          }\n\n          return user;\n      });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\n\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n          if (response.status === 401) {\n              // auto logout if 401 response returned from api\n              logout();\n            //  location.reload(true);\n          }\n\n          const error = (data && data.message) || response.statusText;\n          return Promise.reject(error);\n      }\n\n      return data;\n  });\n}\nvar  doPost = function() {\n\n\n\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ title: 'React Hooks POST Request Example' })\n};\n\nfetch('/post.php')\n  .then(response => response.json())\n  .then(data => alert(data.action));\n\n\n \n    \n      \n \n\n\n  }\n  function preventSubmit(evt) { \n    evt.preventDefault();\n  \n  };\n\nconst Meeting = () => {\n \n\n    return (\n        <div>\n        \n            <Row>\n                <Col sm={8}>\n\n                 <center> <h1>Connexion</h1></center>\n                 <center><p>Veuillez entrer vos indentifiants pour acceder au platforme</p></center> \n                  <br></br>\n                <form onSubmit={preventSubmit}>\n  <div className=\"form-group row\">\n    <label for=\"email\" className=\"col-4 col-form-label\">Email</label> \n    <div className=\"col-8\">\n      <input id=\"email\" name=\"email\" type=\"text\" className=\"form-control\" />\n    </div>\n  </div>\n  <div className=\"form-group row\">\n    <label for=\"password\" className=\"col-4 col-form-label\">Mot de passe</label> \n    <div className=\"col-8\">\n      <input id=\"password\" name=\"password\" type=\"password\" className=\"form-control\" />\n    </div>\n  </div> \n  <div className=\"form-group row\">\n    <div className=\"offset-4 col-8\">\n      <button  onClick={doPost} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Connexion</button>\n    </div>\n  </div>\n</form>\n                </Col>\n            </Row>\n            \n        </div>\n    );\n}\n\nexport default Meeting;\n"]},"metadata":{},"sourceType":"module"}